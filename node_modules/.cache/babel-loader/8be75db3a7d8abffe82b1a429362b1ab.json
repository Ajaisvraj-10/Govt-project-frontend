{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js??ref--17-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addstock.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addstock.vue","mtime":1691734927574},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\babel-loader\\lib\\index.js","mtime":1690631546510},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1690631271247},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js","mtime":1690631371088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Addstock.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <h2>Farmer Plants</h2>\r\n    <label for=\"selectedFarmer\">Select Farmer:</label>\r\n    <select\r\n      id=\"selectedFarmer\"\r\n      v-model=\"selectedFarmer\"\r\n      @change=\"fetchFarmerPlants\"\r\n    >\r\n      <option v-for=\"farmer in farmers\" :key=\"farmer.id\" :value=\"farmer.id\">{{\r\n        farmer.name\r\n      }}</option>\r\n    </select>\r\n    <button @click=\"openAddPlantModal\">Add New Plant</button>\r\n\r\n    <h2>Plants for Selected Farmer</h2>\r\n    <ul class=\"plant-list\">\r\n      <li v-for=\"plant in farmerPlants\" :key=\"plant.id\" class=\"plant-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          v-model=\"selectedPlants\"\r\n          :value=\"plant.id\"\r\n          @change=\"openQuantityModal(plant)\"\r\n        />\r\n        {{ plant.name }} - Quantity: {{ plant.quantity }}\r\n      </li>\r\n    </ul>\r\n\r\n    <b-modal\r\n      id=\"addPlantModal\"\r\n      title=\"Add New Plant\"\r\n      @hidden=\"closeAddPlantModal\"\r\n    >\r\n      <h4>Select Existing Plant:</h4>\r\n      <select v-model=\"selectedExistingPlant\">\r\n        <option\r\n          v-for=\"plant in existingPlants\"\r\n          :key=\"plant.id\"\r\n          :value=\"plant.id\"\r\n        >\r\n          {{ plant.name }}\r\n        </option>\r\n      </select>\r\n      <button @click=\"addExistingPlant\">Add Plant</button>\r\n    </b-modal>\r\n\r\n    <b-modal\r\n      id=\"quantityModal\"\r\n      title=\"Edit Plant Products\"\r\n      @hidden=\"closeQuantityModal\"\r\n    >\r\n      <p>{{ selectedPlant.name }}</p>\r\n      <h4>Edit Products:</h4>\r\n      <ul>\r\n        <li v-for=\"product in selectedPlant.products\" :key=\"product.id\">\r\n          {{ product.name }} - Price: {{ product.price }}\r\n          <input type=\"number\" v-model=\"product.quantity\" />\r\n        </li>\r\n      </ul>\r\n      <button @click=\"saveProductsQuantity\">Save</button>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      farmers: [],\r\n      selectedFarmer: null,\r\n      farmerPlants: [],\r\n      showAddPlantModal: false,\r\n      showQuantityModal: false,\r\n      newPlantName: \"\",\r\n      selectedPlants: [],\r\n      selectedPlant: {\r\n        id: null,\r\n        name: \"\",\r\n        products: [],\r\n      },\r\n      existingPlants: [],\r\n      selectedExistingPlant: null,\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchFarmers();\r\n    await this.fetchExistingPlants();\r\n  },\r\n  methods: {\r\n    async fetchExistingPlants() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://127.0.0.1:8000/api/cropsplant/\"\r\n        );\r\n        this.existingPlants = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching existing plants:\", error);\r\n      }\r\n    },\r\n\r\n    async fetchFarmers() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/farmers/\");\r\n        this.farmers = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching farmers:\", error);\r\n      }  \r\n    },\r\n    async fetchFarmerPlants() {\r\n      try {\r\n        if (this.selectedFarmer) {\r\n          const response = await axios.get(\r\n            `http://127.0.0.1:8000/api/cropsplant/?farmer=${this.selectedFarmer}`\r\n          );\r\n          this.farmerPlants = response.data;\r\n\r\n          for (const plant of this.farmerPlants) {\r\n            const productsResponse = await axios.get(\r\n              `http://127.0.0.1:8000/api/cropsproduct/?plant=${plant.id}`\r\n            );\r\n            const products = productsResponse.data;\r\n            plant.products = products.map((product) => ({\r\n              ...product,\r\n              quantity: 0,\r\n            }));\r\n          }\r\n\r\n          console.log(\"Fetched farmer plants:\", this.farmerPlants);\r\n        } else {\r\n          this.farmerPlants = [];\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching farmer plants:\", error);\r\n      }\r\n    },\r\n\r\n    async fetchPlantProducts(plantId) {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:8000/api/cropsproduct/?plant=${plantId}`\r\n        );\r\n        this.selectedPlant.products = response.data.map((product) => ({\r\n          ...product,\r\n          quantity: 0,\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching plant products:\", error);\r\n      }\r\n    },\r\n\r\n    openAddPlantModal() {\r\n      this.$bvModal.show(\"addPlantModal\");\r\n    },\r\n    closeAddPlantModal() {\r\n      this.$bvModal.hide(\"addPlantModal\");\r\n      this.newPlantName = \"\";\r\n    },\r\n    async addPlant() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://127.0.0.1:8000/api/cropscategory/\"\r\n        );\r\n        const categories = response.data;\r\n        console.log(\"Categories:\", categories);\r\n      } catch (error) {\r\n        console.error(\"Error adding plant:\", error);\r\n      }\r\n    },\r\n\r\n    openQuantityModal(plant) {\r\n      this.$bvModal.show(\"quantityModal\");\r\n      this.selectedPlant.id = plant.id;\r\n      this.selectedPlant.name = plant.name;\r\n      this.fetchPlantProducts(plant.id);\r\n    },\r\n\r\n    closeQuantityModal() {\r\n      this.$bvModal.hide(\"quantityModal\");\r\n      this.selectedPlant.id = null;\r\n      this.selectedPlant.name = \"\";\r\n      this.selectedPlant.quantity = null;\r\n    },\r\n    async saveProductsQuantity() {\r\n      try {\r\n        const requestData = this.selectedPlant.products.map((product) => ({\r\n          quantity: product.quantity,\r\n          crops_in_farmer: this.selectedFarmer,\r\n          product: product.id,\r\n        }));\r\n\r\n        await Promise.all(\r\n          requestData.map((data) =>\r\n            axios.post(`http://127.0.0.1:8000/api/cropsproduct_stock/`, data)\r\n          )\r\n        );\r\n\r\n        this.closeQuantityModal();\r\n        this.fetchFarmerPlants();\r\n      } catch (error) {\r\n        console.error(\"Error updating quantities:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/app/pages"}]}