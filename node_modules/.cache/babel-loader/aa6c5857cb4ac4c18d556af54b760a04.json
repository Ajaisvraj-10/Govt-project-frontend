{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js??ref--17-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addproducts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addproducts.vue","mtime":1691651854889},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\babel-loader\\lib\\index.js","mtime":1690631546510},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1690631271247},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js","mtime":1690631371088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzpcXFVzZXJzXFxIUFxcT25lRHJpdmVcXERlc2t0b3BcXE5ld1Z1ZVByamN0XFxsYXRlc3RcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5ld1Byb2R1Y3Q6ICcnLAogICAgICAvLyBOZXcgcHJvZHVjdCBuYW1lIGlucHV0CiAgICAgIHNlbGVjdGVkUHJvZHVjdFN0b2NrOiB7CiAgICAgICAgcHJvZHVjdDogbnVsbCwKICAgICAgICBxdWFudGl0eTogbnVsbAogICAgICB9LAogICAgICBwcm9kdWN0U3RvY2tzOiBbXSwKICAgICAgcHJvZHVjdHM6IFtdIC8vIEFycmF5IHRvIHN0b3JlIHRoZSBsaXN0IG9mIHByb2R1Y3RzCgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZFByb2R1Y3RTdG9jazogZnVuY3Rpb24gYWRkUHJvZHVjdFN0b2NrKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3Jlc3BvbnNlLCByZXF1ZXN0RGF0YSwgcmVzcG9uc2U7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwoKICAgICAgICAgICAgICAgIGlmICghKF90aGlzLm5ld1Byb2R1Y3QudHJpbSgpICE9PSAnJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvY3JvcHNwcm9kdWN0LycsIHsKICAgICAgICAgICAgICAgICAgbmFtZTogX3RoaXMubmV3UHJvZHVjdAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF9yZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgX3RoaXMucHJvZHVjdHMucHVzaChfcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgICAgX3RoaXMuc2VsZWN0ZWRQcm9kdWN0U3RvY2sucHJvZHVjdCA9IF9yZXNwb25zZS5kYXRhLmlkOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICByZXF1ZXN0RGF0YSA9IHsKICAgICAgICAgICAgICAgICAgcHJvZHVjdDogX3RoaXMuc2VsZWN0ZWRQcm9kdWN0U3RvY2sucHJvZHVjdCwKICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IF90aGlzLnNlbGVjdGVkUHJvZHVjdFN0b2NrLnF1YW50aXR5LAogICAgICAgICAgICAgICAgICBjcm9wc19pbl9mYXJtZXI6IG51bGwgLy8gQWRqdXN0IGFzIG5lZWRlZAoKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS9jcm9wc3Byb2R1Y3Rfc3RvY2svJywgcmVxdWVzdERhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIF90aGlzLnByb2R1Y3RTdG9ja3MucHVzaChyZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgICAgICBfdGhpcy5uZXdQcm9kdWN0ID0gJyc7IC8vIENsZWFyIHRoZSBuZXcgcHJvZHVjdCBpbnB1dAoKICAgICAgICAgICAgICAgIF90aGlzLnNlbGVjdGVkUHJvZHVjdFN0b2NrLnF1YW50aXR5ID0gbnVsbDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE2OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFkZGluZyBwcm9kdWN0IHN0b2NrOicsIF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTZdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZldGNoUHJvZHVjdHM6IGZ1bmN0aW9uIGZldGNoUHJvZHVjdHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2Nyb3BzcHJvZHVjdC8nKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMi5wcm9kdWN0cyA9IHJlc3BvbnNlLmRhdGE7IC8vIFBvcHVsYXRlIHRoZSBwcm9kdWN0cyBhcnJheQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdHM6JywgX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRQcm9kdWN0QnlJZDogZnVuY3Rpb24gZ2V0UHJvZHVjdEJ5SWQocHJvZHVjdElkKSB7CiAgICAgIHJldHVybiB0aGlzLnByb2R1Y3RzLmZpbmQoZnVuY3Rpb24gKHByb2R1Y3QpIHsKICAgICAgICByZXR1cm4gcHJvZHVjdC5pZCA9PT0gcHJvZHVjdElkOwogICAgICB9KSB8fCB7fTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoUHJvZHVjdHMoKTsKICB9Cn07"},{"version":3,"sources":["Addproducts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AACA;AACA,MAAA,oBAAA,EAAA;AACA,QAAA,OAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAFA;AAMA,MAAA,aAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA,CAOA;;AAPA,KAAA;AASA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,6BACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,sBAGA,KAAA,CAAA,UAAA,CAAA,IAAA,OAAA,EAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIA,KAAA,CAAA,IAAA,CAAA,yCAAA,EAAA;AAAA,kBAAA,IAAA,EAAA,KAAA,CAAA;AAAA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,SAJA;;AAKA,gBAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA;;AACA,gBAAA,KAAA,CAAA,oBAAA,CAAA,OAAA,GAAA,SAAA,CAAA,IAAA,CAAA,EAAA;;AANA;AASA,gBAAA,WATA,GASA;AACA,kBAAA,OAAA,EAAA,KAAA,CAAA,oBAAA,CAAA,OADA;AAEA,kBAAA,QAAA,EAAA,KAAA,CAAA,oBAAA,CAAA,QAFA;AAGA,kBAAA,eAAA,EAAA,IAHA,CAGA;;AAHA,iBATA;AAAA;AAAA,uBAeA,KAAA,CAAA,IAAA,CAAA,+CAAA,EAAA,WAAA,CAfA;;AAAA;AAeA,gBAAA,QAfA;;AAgBA,gBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA;;AAEA,gBAAA,KAAA,CAAA,UAAA,GAAA,EAAA,CAlBA,CAkBA;;AACA,gBAAA,KAAA,CAAA,oBAAA,CAAA,QAAA,GAAA,IAAA;AAnBA;AAAA;;AAAA;AAAA;AAAA;AAqBA,gBAAA,OAAA,CAAA,KAAA,CAAA,6BAAA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,KAxBA;AAyBA,IAAA,aAzBA,2BAyBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,GAAA,CAAA,yCAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAGA,gBAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAHA,CAGA;;AAHA;AAAA;;AAAA;AAAA;AAAA;AAKA,gBAAA,OAAA,CAAA,KAAA,CAAA,0BAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KAhCA;AAiCA,IAAA,cAjCA,0BAiCA,SAjCA,EAiCA;AACA,aAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,EAAA,KAAA,SAAA;AAAA,OAAA,KAAA,EAAA;AACA;AAnCA,GAZA;AAiDA,EAAA,OAjDA,qBAiDA;AACA,SAAA,aAAA;AACA;AAnDA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n      <h2>Add Product Stock</h2>\r\n      <form class=\"product-stock-form\" @submit.prevent=\"addProductStock\">\r\n        <label for=\"newProduct\">New Product:</label>\r\n        <input type=\"text\" id=\"newProduct\" v-model=\"newProduct\" />\r\n        <br>\r\n        <label for=\"quantity\">Quantity:</label>\r\n        <input type=\"number\" id=\"quantity\" v-model=\"selectedProductStock.quantity\">\r\n        <br>\r\n        <button type=\"submit\">Add Product Stock</button>\r\n      </form>\r\n  \r\n      <h2>Added Product Stock</h2>\r\n      <ul class=\"product-stock-list\">\r\n        <li v-for=\"productStock in productStocks\" :key=\"productStock.id\" class=\"product-stock-item\">\r\n          <p class=\"info-label\">{{ getProductById(productStock.product).name }} - Quantity: {{ productStock.quantity }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        newProduct: '', // New product name input\r\n        selectedProductStock: {\r\n          product: null,\r\n          quantity: null,\r\n        },\r\n        productStocks: [],\r\n        products: [], // Array to store the list of products\r\n      };\r\n    },\r\n    methods: {\r\n        async addProductStock() {\r\n      try {\r\n        // Create a new product if newProduct is not empty\r\n        if (this.newProduct.trim() !== '') {\r\n          const response = await axios.post('http://127.0.0.1:8000/api/cropsproduct/', { name: this.newProduct });\r\n          this.products.push(response.data);\r\n          this.selectedProductStock.product = response.data.id;\r\n        }\r\n        \r\n        const requestData = {\r\n          product: this.selectedProductStock.product,\r\n          quantity: this.selectedProductStock.quantity,\r\n          crops_in_farmer: null, // Adjust as needed\r\n        };\r\n\r\n        const response = await axios.post('http://127.0.0.1:8000/api/cropsproduct_stock/', requestData);\r\n        this.productStocks.push(response.data);\r\n        \r\n        this.newProduct = ''; // Clear the new product input\r\n        this.selectedProductStock.quantity = null;\r\n      } catch (error) {\r\n        console.error('Error adding product stock:', error);\r\n      }\r\n    },\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/api/cropsproduct/');\r\n        this.products = response.data; // Populate the products array\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    },\r\n      getProductById(productId) {\r\n        return this.products.find(product => product.id === productId) || {};\r\n      },\r\n    },\r\n    created() {\r\n      this.fetchProducts();\r\n    },\r\n  };\r\n  </script>\r\n  "],"sourceRoot":"src/views/app/pages"}]}