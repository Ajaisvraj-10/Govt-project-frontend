{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js??ref--17-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Blogs .vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Blogs .vue","mtime":1691042559171},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\babel-loader\\lib\\index.js","mtime":1690631546510},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1690631271247},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js","mtime":1690631371088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Blogs .vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <h1>Blog List</h1>\r\n\r\n    <!-- Filter buttons -->\r\n    <div class=\"filter-buttons\">\r\n      <button @click=\"filterByCategory(null)\">All</button>\r\n      <button\r\n        v-for=\"category in categories\"\r\n        :key=\"category.id\"\r\n        @click=\"filterByCategory(category.id)\"\r\n      >\r\n        {{ category.name }}\r\n      </button>\r\n      <br />\r\n      <button @click=\"showModal = true\">Add Blog</button>\r\n    </div>\r\n    <br /><br />\r\n\r\n    <!-- Filter by date -->\r\n    <input type=\"date\" v-model=\"selectedDate\" @change=\"filterByDate\" />\r\n\r\n    <!-- Blogs cards -->\r\n    <div class=\"blog-cards\">\r\n      <div v-for=\"blog in filteredBlogs\" :key=\"blog.id\" class=\"blog-card\">\r\n        <h2>{{ blog.name }}</h2>\r\n        <p>{{ blog.description }}</p>\r\n        <img :src=\"blog.image\" alt=\"Blog Image\" class=\"blog-image\" />\r\n        <p>Category: {{ getCategoryName(blog.category) }}</p>\r\n        <p>Created: {{ blog.created_at }}</p>\r\n\r\n        <!-- Tags input while viewing a blog -->\r\n        <div>\r\n          <span\r\n            v-for=\"tag in blog.tag_names\"\r\n            :key=\"tag\"\r\n            class=\"tag\"\r\n           \r\n          >\r\n            {{ tag }}\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Edit and Delete buttons -->\r\n        <div>\r\n          <button @click=\"editBlog(blog)\">Edit</button>\r\n          <button @click=\"deleteBlog(blog.id)\">Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add/Edit Blog Modal -->\r\n    <b-modal\r\n      v-model=\"showModal\"\r\n      @ok=\"editingBlog ? updateBlog() : addBlog()\"\r\n      @cancel=\"resetModal\"\r\n    >\r\n      <form\r\n        id=\"formgrp\"\r\n        @submit.prevent=\"editingBlog ? updateBlog() : addBlog()\"\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"blogName\">Blog Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"blogName\"\r\n            name=\"name\"\r\n            class=\"form-control\"\r\n            v-model=\"newBlog.name\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"blogDescription\">Blog Description:</label>\r\n          <textarea\r\n            id=\"blogDescription\"\r\n            name=\"description\"\r\n            class=\"form-control\"\r\n            v-model=\"newBlog.description\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"blogImage\">Image:</label>\r\n          <input type=\"file\" @change=\"onFileChange\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"blogCategory\">Category:</label>\r\n          <select\r\n            id=\"blogCategory\"\r\n            name=\"category\"\r\n            class=\"form-control\"\r\n            v-model=\"newBlog.category\"\r\n          >\r\n            <option value=\"\" disabled>Select a category</option>\r\n            <option\r\n              v-for=\"category in categories\"\r\n              :key=\"category.id\"\r\n              :value=\"category.id\"\r\n            >{{ category.name }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"blogDate\">Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"blogDate\"\r\n            name=\"created_at\"\r\n            class=\"form-control\"\r\n            v-model=\"newBlog.created_at\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Tags input -->\r\n        <div>\r\n  <label>Select Tags:</label>\r\n  <div v-for=\"tag in tags\" :key=\"tag.id\">\r\n    <input\r\n      type=\"checkbox\"\r\n      :id=\"'tagCheckbox_' + tag.id\"\r\n      :value=\"tag.id\"\r\n      v-model=\"selectedTags\"\r\n      name=\"tags\"\r\n    />\r\n    <label :for=\"'tagCheckbox_' + tag.id\">{{ tag.name }}</label>\r\n  </div>\r\n</div>\r\n\r\n      </form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n  blogs: [],\r\n  categories: [],\r\n  filteredBlogs: [],\r\n  selectedCategory: null,\r\n  selectedDate: \"\",\r\n  newBlog: {\r\n    id: null,\r\n    name: \"\",\r\n    description: \"\",\r\n    image: null,\r\n    category: null,\r\n    created_at: null,\r\n    tags: [], \r\n},\r\n  showModal: false,\r\n  editingBlog: false,\r\n  selectedFile: null,\r\n  tags: [],\r\n  selectedTags: [], \r\n};  \r\n  },\r\n  mounted() {\r\n    this.fetchBlogs();\r\n    this.fetchCategories();\r\n    this.fetchTags();\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    async fetchBlogs() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/blogs/\");\r\n        this.blogs = response.data;\r\n        this.filteredBlogs = this.blogs;\r\n      } catch (error) {\r\n        console.error(\"Error fetching blogs:\", error);\r\n      }\r\n    },\r\n    async fetchCategories() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/categories/\");\r\n        this.categories = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n      }\r\n    },\r\n    filterByCategory(categoryId) {\r\n      if (categoryId === null) {\r\n        this.selectedCategory = null;\r\n        this.filteredBlogs = this.blogs;\r\n      } else {\r\n        this.selectedCategory = categoryId;\r\n        this.filteredBlogs = this.blogs.filter(\r\n          (blog) => blog.category === categoryId\r\n        );\r\n      }\r\n    },\r\n    filterByDate() {\r\n      if (this.selectedDate === \"\") {\r\n        this.filteredBlogs = this.blogs; // Show all blogs when date is not selected\r\n      } else {\r\n        const selectedDate = new Date(this.selectedDate)\r\n          .toISOString()\r\n          .split(\"T\")[0];\r\n        this.filteredBlogs = this.blogs.filter((blog) => {\r\n          const blogDate = new Date(blog.created_at)\r\n            .toISOString()\r\n            .split(\"T\")[0];\r\n          return blogDate === selectedDate;\r\n        });\r\n      }\r\n    },\r\n\r\n    addSelectedTag() {\r\n      if (!this.selectedTag) {\r\n        return;\r\n      }\r\n\r\n      const tagToAdd = this.tags.find((tag) => tag.id === this.selectedTag);\r\n      if (tagToAdd && !this.newBlog.tags.some((tag) => tag.id === tagToAdd.id)) {\r\n        this.newBlog.tags.push(tagToAdd.id);\r\n        this.selectedTag = null;\r\n      }\r\n    },\r\n\r\n\r\n    async fetchTags() {\r\n  try {\r\n    const response = await axios.get(\"http://127.0.0.1:8000/tags/\");\r\n    this.tags = response.data;\r\n    console.log(\"Fetched tags:\", this.tags); // Add this line\r\n  } catch (error) {\r\n    console.error(\"Error fetching tags:\", error);\r\n  }\r\n},\r\n\r\n\r\n    showAddConfirmation() {\r\n      if (window.confirm(\"Are you sure you want to add this blog?\")) {\r\n        this.addBlog();\r\n      }\r\n    },\r\n    async addBlog() {\r\n      if (!this.selectedFile) {\r\n        alert(\"Please select an image.\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"name\", this.newBlog.name);\r\n      formData.append(\"description\", this.newBlog.description);\r\n      formData.append(\"image\", this.selectedFile);\r\n      formData.append(\"category\", this.newBlog.category);\r\n      formData.append(\"created_at\", this.newBlog.created_at);\r\n      this.selectedTags.forEach(tagId => {\r\n        formData.append(\"tags\", tagId);\r\n      });\r\n\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/blogs/\", formData);\r\n        if (response.data.id > 0) {\r\n          this.filteredBlogs.push(response.data);\r\n          this.resetNewBlog();\r\n          this.showModal = false;\r\n        } else {\r\n          alert(\"Something went wrong while adding the blog.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding blog:\", error);\r\n      }\r\n    },\r\n\r\n\r\n\r\nasync editBlog(blog) {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://127.0.0.1:8000/blogs/${blog.id}/`\r\n    );\r\n    const editedBlog = response.data;\r\n    this.editingBlog = true;\r\n    this.showModal = true;\r\n    this.newBlog.tags = editedBlog.tags.map((tag) => tag.id);\r\n\r\n    this.newBlog = {\r\n      id: editedBlog.id,\r\n      name: editedBlog.name,\r\n      description: editedBlog.description,\r\n      image: null,\r\n      category: editedBlog.category.id,\r\n      created_at: editedBlog.created_at,\r\n      tags: editedBlog.tags || [], \r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching blog for editing:\", error);\r\n  }\r\n},\r\n\r\nasync updateBlog() {\r\n      const formData = new FormData(document.getElementById(\"formgrp\"));\r\n      this.newBlog.tags.forEach((tagId) => {\r\n        formData.append(\"tags\", tagId);\r\n      });\r\n\r\n      try {\r\n        const response = await axios.put(`http://127.0.0.1:8000/blogs/${this.newBlog.id}/`, formData);\r\n        if (response.status === 200) {\r\n          // Handle success\r\n        } else {\r\n          // Handle error\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating blog:', error);\r\n      }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n    async deleteBlog(blogId) {\r\n      try {\r\n        const response = await axios.delete(\r\n          `http://127.0.0.1:8000/blogs/${blogId}/`\r\n        );\r\n        if (response.status === 200) {\r\n          this.fetchBlogs();\r\n        } else {\r\n          alert(\"Something went wrong while deleting the blog.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error deleting blog:\", error);\r\n      }\r\n    },\r\n    getCategoryName(categoryId) {\r\n      const category = this.categories.find((c) => c.id === categoryId);\r\n      return category ? category.name : \"\";\r\n    },\r\n    resetModal() {\r\n      this.showModal = false;\r\n      this.editingBlog = false;\r\n    },\r\n    resetNewBlog() {\r\n      this.newBlog = {\r\n        id: null,\r\n        name: \"\",\r\n        description: \"\",\r\n        image: null,\r\n        category: null,\r\n        created_at: null,\r\n        tags: [],\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.blog-list {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nbutton {\r\n  margin: 5px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\ninput {\r\n  margin: 10px;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.blog-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.blog-card {\r\n  width: 300px;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.blog-image {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.blog-category {\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n}\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\ninput[type=\"text\"],\r\ntextarea {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  display: block;\r\n  margin-top: 5px;\r\n}\r\n\r\n.form-control-file {\r\n  width: 100%;\r\n}\r\n\r\n.btn {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/app/pages"}]}