{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addstock.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addstock.vue","mtime":1691659503665},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\css-loader\\dist\\cjs.js","mtime":1690630782794},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1690631371246},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\postcss-loader\\src\\index.js","mtime":1690631539045},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1690631271247},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js","mtime":1690631371088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogU3R5bGUgZm9yIHRoZSBtb2RhbCAqLwoubW9kYWwgewogIGRpc3BsYXk6IG5vbmU7CiAgcG9zaXRpb246IGZpeGVkOwogIHotaW5kZXg6IDE7CiAgbGVmdDogMDsKICB0b3A6IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIG92ZXJmbG93OiBhdXRvOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTsKfQoKLm1vZGFsLWNvbnRlbnQgewogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIG1hcmdpbjogMTUlIGF1dG87CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjODg4OwogIHdpZHRoOiA4MCU7Cn0KCi5jbG9zZSB7CiAgY29sb3I6ICNhYWE7CiAgZmxvYXQ6IHJpZ2h0OwogIGZvbnQtc2l6ZTogMjhweDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLmNsb3NlOmhvdmVyLAouY2xvc2U6Zm9jdXMgewogIGNvbG9yOiBibGFjazsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["Addstock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Addstock.vue","sourceRoot":"src/views/app/pages","sourcesContent":["<template>\r\n  <div>\r\n    <h2>Farmer Plants</h2>\r\n    <label for=\"selectedFarmer\">Select Farmer:</label>\r\n    <select id=\"selectedFarmer\" v-model=\"selectedFarmer\" @change=\"fetchFarmerPlants\">\r\n      <option v-for=\"farmer in farmers\" :key=\"farmer.id\" :value=\"farmer.id\">{{ farmer.name }}</option>\r\n    </select>\r\n    <button @click=\"openAddPlantModal\">Add New Plant</button>\r\n\r\n    <h2>Plants for Selected Farmer</h2>\r\n    <ul class=\"plant-list\">\r\n      <li v-for=\"plant in farmerPlants\" :key=\"plant.id\" class=\"plant-item\">\r\n        <input type=\"checkbox\" v-model=\"selectedPlants\" :value=\"plant.id\" @change=\"openQuantityModal(plant)\" />\r\n        {{ plant.name }}\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- Quantity Modal -->\r\n    <div class=\"modal\" v-if=\"showQuantityModal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeQuantityModal\">&times;</span>\r\n        <h3>Plant Quantity</h3>\r\n        <p>{{ selectedPlant.name }}</p>\r\n        <label for=\"plantQuantity\">Quantity:</label>\r\n        <input type=\"number\" id=\"plantQuantity\" v-model=\"selectedPlant.quantity\" />\r\n        <button @click=\"saveQuantity\">Save Quantity</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Plant Modal -->\r\n    <div class=\"modal\" v-if=\"showAddPlantModal\">\r\n      <!-- ... -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      farmers: [],\r\n      selectedFarmer: null,\r\n      farmerPlants: [],\r\n      showAddPlantModal: false,\r\n      showQuantityModal: false,\r\n      newPlantName: '',\r\n      selectedPlants: [],\r\n      selectedPlant: {\r\n        id: null,\r\n        name: '',\r\n        quantity: null,\r\n      },\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchFarmers();\r\n  },\r\n  methods: {\r\n    // ... (same as before)\r\n\r\n    openQuantityModal(plant) {\r\n      this.showQuantityModal = true;\r\n      this.selectedPlant.id = plant.id;\r\n      this.selectedPlant.name = plant.name;\r\n      this.selectedPlant.quantity = plant.quantity || 0;\r\n    },\r\n    closeQuantityModal() {\r\n      this.showQuantityModal = false;\r\n      this.selectedPlant.id = null;\r\n      this.selectedPlant.name = '';\r\n      this.selectedPlant.quantity = null;\r\n    },\r\n    async saveQuantity() {\r\n      try {\r\n        const requestData = {\r\n          quantity: this.selectedPlant.quantity,\r\n        };\r\n\r\n        await axios.patch(`http://127.0.0.1:8000/api/cropsplant/${this.selectedPlant.id}/`, requestData);\r\n        this.closeQuantityModal();\r\n        this.fetchFarmerPlants();\r\n      } catch (error) {\r\n        console.error('Error saving quantity:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* ... (same as before) */\r\n</style>\r\nIn this updated code, when you select plants by checking the checkbox next to their names, clicking the \"Save Quantity\" button in the modal will update the quantity of the selected plant. The openQuantityModal method is triggered when you change the checkbox status, allowing you to edit the quantity of the selected plant in the modal.\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        farmers: [],\r\n        selectedFarmer: null,\r\n        farmerPlants: [],\r\n        showAddPlantModal: false,\r\n        newPlantName: '',\r\n      };\r\n    },\r\n    async mounted() {\r\n      await this.fetchFarmers();\r\n    },\r\n    methods: {\r\n      async fetchFarmers() {\r\n        try {\r\n          const response = await axios.get('http://127.0.0.1:8000/api/farmers/');\r\n          this.farmers = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching farmers:', error);\r\n        }\r\n      },\r\n      async fetchFarmerPlants() {\r\n        try {\r\n          if (this.selectedFarmer) {\r\n            const response = await axios.get(`http://127.0.0.1:8000/api/cropsplant/?farmer=${this.selectedFarmer}`);\r\n            this.farmerPlants = response.data;\r\n          } else {\r\n            this.farmerPlants = [];\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching farmer plants:', error);\r\n        }\r\n      },\r\n      openAddPlantModal() {\r\n        this.showAddPlantModal = true;\r\n      },\r\n      closeAddPlantModal() {\r\n        this.showAddPlantModal = false;\r\n        this.newPlantName = '';\r\n      },\r\n      async addNewPlant() {\r\n        try {\r\n          const requestData = {\r\n            name: this.newPlantName,\r\n            farmer: this.selectedFarmer,\r\n          };\r\n  \r\n          const response = await axios.post('http://127.0.0.1:8000/api/cropsplant/', requestData);\r\n          this.farmerPlants.push(response.data);\r\n          this.closeAddPlantModal();\r\n        } catch (error) {\r\n          console.error('Error adding new plant:', error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Style for the modal */\r\n  .modal {\r\n    display: none;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  \r\n  .modal-content {\r\n    background-color: white;\r\n    margin: 15% auto;\r\n    padding: 20px;\r\n    border: 1px solid #888;\r\n    width: 80%;\r\n  }\r\n  \r\n  .close {\r\n    color: #aaa;\r\n    float: right;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .close:hover,\r\n  .close:focus {\r\n    color: black;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n  </style>\r\n  "]}]}