{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js??ref--17-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Vfc.vue?vue&type=template&id=42c62fb0&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Vfc.vue","mtime":1691226323639},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1690631371281},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1690631271247},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js","mtime":1690631371088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}