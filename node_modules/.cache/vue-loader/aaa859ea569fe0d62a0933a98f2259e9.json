{"remainingRequest":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/leadfinder-crm/src/views/app/pages/header.vue?vue&type=template&id=d0a3b318&scoped=true&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/src/views/app/pages/header.vue","mtime":1681109904593},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}