{"remainingRequest":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/leadfinder-crm/src/views/app/pages/header.vue?vue&type=template&id=45938bc7&scoped=true&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/src/views/app/pages/header.vue","mtime":1681759131881},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/leadfinder-crm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9Im1haW4tY29udGVudCI+CiAgPGhlYWRlciBjbGFzcz0iZmxleC1hbGlnbiBweC0zIj4KICAgIDxyb3V0ZXItbGluayB0bz0iL2NhbXBhaWducyI+CiAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2xvZ28ucG5nIiB3aWR0aD0iMTIwIj4KICAgIDwvcm91dGVyLWxpbms+CiAgICA8IS0tPGltZyBzcmM9Ii9pbWFnZXMvbG9nby5wbmciIHdpZHRoPSIxMjAiIHYtaWY9ImxvZ29fdGFiPT0nbG9nbzEnIiBAY2xpY2s9ImxvZ29fdGFiPSdsb2dvMiciPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvbG9nb2wucG5nIiB3aWR0aD0iMTIwIiB2LWlmPSJsb2dvX3RhYj09J2xvZ28yJyIgQGNsaWNrPSJsb2dvX3RhYj0nbG9nbzMnIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2xvZ29sMS5wbmciIHdpZHRoPSIxMjAiIHYtaWY9ImxvZ29fdGFiPT0nbG9nbzMnIiBAY2xpY2s9ImxvZ29fdGFiPSdsb2dvNCciPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvbG9nb2wyLnBuZyIgd2lkdGg9IjEyMCIgdi1pZj0ibG9nb190YWI9PSdsb2dvNCciIEBjbGljaz0ibG9nb190YWI9J2xvZ281JyI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9sb2dvbDQucG5nIiB3aWR0aD0iMTIwIiB2LWlmPSJsb2dvX3RhYj09J2xvZ281JyIgQGNsaWNrPSJsb2dvX3RhYj0nbG9nbzEnIj4tLT4KCgoKICAgIDxkaXYgY2xhc3M9ImQtZmxleCBnMiI+CiAgICAgIDxidXR0b24gIGNsYXNzPSJidG4tdmlvbGV0IGQtZmxleCBweC0yIHBsYW5fYnRuIiB2LWItbW9kYWwuYXBwLW1vZGFsPgogICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3BsYW4ucG5nIiBzdHlsZT0id2lkdGg6IDE1cHg7bWFyZ2luLXJpZ2h0OiA4cHg7YWxpZ24tc2VsZjogY2VudGVyOyI+QXBwcwogICAgICA8L2J1dHRvbj4KICAgICAgPGJ1dHRvbiAgY2xhc3M9ImJ0bi12aW9sZXQgZC1mbGV4IHB4LTIgcGxhbl9idG4iIHYtYi1tb2RhbC5lbS1tb2RhbD4KICAgICAgIGVtCiAgICAgIDwvYnV0dG9uPgogICAgICA8YnV0dG9uICBjbGFzcz0iYnRuLXZpb2xldCBkLWZsZXggcHgtMiBwbGFuX2J0biIgIHYtYi1tb2RhbC5lbS1tb2RhbDI+CiAgICAgICBlbTIKICAgICAgPC9idXR0b24+CiAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci10b2dnbGUyciBvcGVuX3NpZGVfbWVudSIgdHlwZT0iYnV0dG9uIiB2LWItbW9kYWwucHJvZmlsZS1tb2RhbD4KICAgICAgICA8aW1nIGNsYXNzPSJwcm9maWxlX2ljb24iIDpzcmM9InByb2ZpbGUucHJvZmlsZV9waWN0dXJlP3Byb2ZpbGUucHJvZmlsZV9waWN0dXJlOidodHRwczovL2xlYWRmaW5kZXIubGl2ZS9hc3NldHMvaW1nL3VzZXJfMS5wbmcnIiBzdHlsZT0id2lkdGg6IDM2cHg7IGhlaWdodDogMzZweDsgYm9yZGVyLXJhZGl1czogNTAlOyAiPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7dG9wOiAtNjBweDsiPgogICAgPGlmcmFtZSBzcmM9Imh0dHBzOi8vY2hlY2tvdXQuc3RyaXBlLmNvbS9jL3BheS8iIHN0eWxlPSJoZWlnaHQ6IDUwcHg7d2lkdGg6IDEwMCU7Ij48L2lmcmFtZT4KICA8L2Rpdj4KCiAgCiAgPGItbW9kYWwgaWQ9ImFwcC1tb2RhbCIgc2l6ZT0ic20iICBoaWRlLWhlYWRlciBoaWRlLWZvb3Rlcj4KICAgICAgPG1haW4gY2xhc3M9ImxlYWQtbWFpbiAgbXQtMCIgc3R5bGU9ImhlaWdodDogZml0LWNvbnRlbnQ7YmFja2dyb3VuZC1jb2xvcjppbml0aWFsO3BhZGRpbmc6IDEuM3JlbTtnYXA6MXJlbTsiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciB3LTEwMCBkLWZsZXgganVzdGlmeS1jb250ZW50LWVuZCBweC0xIHBiLTMgcHQtMSBib3JkZXItMCIgPgogICAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvY2xvc2UucG5nIiB3aWR0aD0iMTQiIHN0eWxlPSJvcGFjaXR5Oi43OyIgQGNsaWNrPSIkYnZNb2RhbC5oaWRlKCdhcHAtbW9kYWwnKSI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iYXBwLWl0ZW0iIEBjbGljaz0icmVkaXJlY3RUbygnbGVhZF9maW5kaW5nJykiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiBnMiB3LTEwMCBtYi0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbjIgZzMiPgogICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2xlYWQzLnBuZyI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxoMz5MZWFkIEZpbmRpbmc8L2gzPgogICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtdC0xIj5BIHRvb2wgZm9yIGRpc2NvdmVyaW5nIHBvdGVudGlhbCBidXNpbmVzcyBvcHBvcnR1bml0aWVzPC9oNj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3RvZ2dsZTIucG5nIiBjbGFzcz0idG9nZ2xlIGRlYWN0aXZlLXRvZ2dsZSI+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3RvZ2dsZTItYWN0aXZlLnBuZyIgY2xhc3M9InRvZ2dsZSBhY3RpdmUtdG9nZ2xlIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgCgogICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9ImFwcC1pdGVtIiBAY2xpY2s9InJlZGlyZWN0VG8oJ2NybScpIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24gZzIgdy0xMDAgbWItMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24yIGczIj4KICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltYWdlcy9jcm0zLnBuZyI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxoMz5DUk08L2gzPgogICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtdC0xIj5LZWVwIHRyYWNrIG9mIGFuZCBjb250cm9sIHlvdXIgYnVzaW5lc3MgbGVhZHMgdXNpbmcgdGhlIExlYWRmaW5kZXIgQ1JNIHRvb2w8L2g2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvdG9nZ2xlMi5wbmciIGNsYXNzPSJ0b2dnbGUgZGVhY3RpdmUtdG9nZ2xlIj4KICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvdG9nZ2xlMi1hY3RpdmUucG5nIiBjbGFzcz0idG9nZ2xlIGFjdGl2ZS10b2dnbGUiPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICAKCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iYXBwLWl0ZW0iIEBjbGljaz0icmVkaXJlY3RUbygnZW1haWxfbWFya2V0aW5nJykiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiBnMiB3LTEwMCBtYi0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbjIgZzMiPgogICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2VtYWlsMy5wbmciPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8aDM+RW1haWwgTWFya2V0aW5nPC9oMz4KICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibXQtMSI+Q3JlYXRlIGFuZCBzZW5kIHByb21vdGlvbmFsIGVtYWlscyB0byB0aGUgbGVhZHMgaW4geW91ciBDUk08L2g2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvdG9nZ2xlMi5wbmciIGNsYXNzPSJ0b2dnbGUgZGVhY3RpdmUtdG9nZ2xlIj4KICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvdG9nZ2xlMi1hY3RpdmUucG5nIiBjbGFzcz0idG9nZ2xlIGFjdGl2ZS10b2dnbGUiPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgIAoKICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJhcHAtaXRlbSIgQGNsaWNrPSJyZWRpcmVjdFRvKCduZXdzJykiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiBnMiB3LTEwMCBtYi0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbjIgZzMiPgogICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL25ld3NsZXR0ZXIzLnBuZyI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxoMz5BSSBOZXdzbGV0dGVyPC9oMz4KICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibXQtMSI+QSBuZXdzbGV0dGVyIGdlbmVyYXRpb24gdG9vbCBwb3dlcmVkIGJ5IENoYXRHUFQncyBBSSB0ZWNobm9sb2d5PC9oNj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3RvZ2dsZTIucG5nIiBjbGFzcz0idG9nZ2xlIGRlYWN0aXZlLXRvZ2dsZSI+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3RvZ2dsZTItYWN0aXZlLnBuZyIgY2xhc3M9InRvZ2dsZSBhY3RpdmUtdG9nZ2xlIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgCgogICAgICAgIDwvZGl2PgogICAgICA8L21haW4+CiAgPC9iLW1vZGFsPgogCiAgPGItbW9kYWwgaWQ9InByb2ZpbGUtbW9kYWwiIGhpZGUtaGVhZGVyIGhpZGUtZm9vdGVyPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MHB4O3RvcDowcHg7ei1pbmRleDo5OTsiPgogICAgICA8aW1nIHNyYz0iL2ltYWdlcy9jbG9zZTIucG5nIiB3aWR0aD0iMTQiIHN0eWxlPSJvcGFjaXR5Oi43OyIgQGNsaWNrPSIkYnZNb2RhbC5oaWRlKCdwcm9maWxlLW1vZGFsJykiPgogICAgPC9kaXY+CiAgICA8ZGl2IHN0eWxlPSIKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMDBweDsKICAgICAgICByaWdodDogLTYwcHg7CiAgICAgICAgei1pbmRleDogMDsKICAgICAgICBwYWRkaW5nLXRvcDogMTAwcHg7Ij4KICAgICAgPGltZyBzcmM9Imh0dHBzOi8vbGVhZGZpbmRlci5saXZlL2Fzc2V0cy9pbWcvaXBob25lLnBuZyIgc3R5bGU9Im9wYWNpdHk6IC44OyI+CiAgICA8L2Rpdj4KICAgIDx1bCBjbGFzcz0ibS0wIG1sLWxnLWF1dG8gcC0wIHNpZGVfbWVudSBwLWxnLTAiIHN0eWxlPSJtaW4taGVpZ2h0OjYwdmg7bWF4LWhlaWdodDo5MHZoO292ZXJmbG93OmF1dG87ei1pbmRleDogOTtwb3NpdGlvbjogcmVsYXRpdmU7Ij4KICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBwbC0yIGQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBtdC0xIj4KICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgIDxpbWcgY2xhc3M9InByb2ZpbGVfcGljIiA6c3JjPSJwcm9maWxlLnByb2ZpbGVfcGljdHVyZT9wcm9maWxlLnByb2ZpbGVfcGljdHVyZTonaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy91c2VyXzEucG5nJyIgc3R5bGU9IndpZHRoOiA0NnB4OyBoZWlnaHQ6IDQ2cHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgbWFyZ2luLXRvcDogMnB4OyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJweC0zIiBzdHlsZT0ibWF4LXdpZHRoOiAyNjBweDsgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDsiPgogICAgICAgICAgICA8aDUgY2xhc3M9IiB1c2VybmFtZSB0ZXh0LTIwIG1iLTEiIHN0eWxlPSJmb250LXdlaWdodDogNTAwOyI+e3twcm9maWxlLm5hbWV9fTwvaDU+CiAgICAgICAgICAgIDxwIGNsYXNzPSJtLTAgdXNlcmVtYWlsIiBzdHlsZT0iZm9udC1zaXplOiAxNHB4OyI+e3twcm9maWxlLmVtYWlsfX08L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgICAgPGhyIGNsYXNzPSJteS00Ij4KICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSIgdi1iLW1vZGFsLnByb2ZpbGU+CiAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgcGxhbl9idG4iID48aSBjbGFzcz0iZmEgZmEtdXNlciIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gUHJvZmlsZTwvYT4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgcGxhbl9idG4iID48aSBjbGFzcz0iZmEgZmEtcXVlc3Rpb24tY2lyY2xlIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiBTdXBwb3J0PC9hPgogICAgICA8L2xpPgoKICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSIgdi1iLW1vZGFsLnBsYW5zPgogICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIHBsYW5fYnRuIj4gPGkgY2xhc3M9ImZhIGZhLXdyZW5jaCIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gVXBncmFkZSBQbGFuPC9hPgogICAgICA8L2xpPgoKICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSIgdi1iLW1vZGFsLmFjY291bnQ+CiAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgcGxhbl9idG4iPiA8aSBjbGFzcz0iZmEgZmEtdXNlciIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gQWNjb3VudDwvYT4KICAgICAgPC9saT4KICAgICAKICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgIiA+PGkgY2xhc3M9ImZhcyBmYS1zaWduLW91dC1hbHQiPjwvaT4gU2lnbiBvdXQ8L2E+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogIDwvYi1tb2RhbD4KCiAgPGItbW9kYWwgaWQ9InByb2ZpbGUiIGhpZGUtaGVhZGVyIGhpZGUtZm9vdGVyPgogICAgPG1haW4gY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgPGRpdiBjbGFzcz0icHJvZmxpZS1wYWdlIiBzdHlsZT0iaGVpZ2h0OiAxMDAlOyIgPgogICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24gbXktMSIgPgogICAgICAgICAgPGRpdiBzdHlsZT0id2lkdGg6MzBweDsiPgogICAgICAgICAgICA8aW1nIHNyYz0iL2ltYWdlcy9iYWNrLnBuZyIgd2lkdGg9IjI2IiBzdHlsZT0ib3BhY2l0eTouNzsiICBAY2xpY2s9ImNybnRfdGFiX3Byb2ZpbGU9J3Byb2ZpbGUnIiAgCiAgICAgICAgICAgIHYtaWY9ImNybnRfdGFiX3Byb2ZpbGU9PSdwcm9maWxlLWVkaXQnIHx8IGNybnRfdGFiX3Byb2ZpbGU9PSdjaGFuZ2UtcGFzc3dvcmQnIgogICAgICAgICAgICA+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxoMiBjbGFzcz0idGV4dC1jZW50ZXIgdGV4dC0yMiI+UHJvZmlsZTwvaDI+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDozMHB4OyI+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2Nsb3NlMi5wbmciIHdpZHRoPSIxNCIgc3R5bGU9Im9wYWNpdHk6Ljc7IiBAY2xpY2s9IiRidk1vZGFsLmhpZGUoJ3Byb2ZpbGUnKSI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8c2VjdGlvbiBjbGFzcz0icHJvZmlsZS1zZWMgcHgtNCIgdi1pZj0iY3JudF90YWJfcHJvZmlsZT09J3Byb2ZpbGUnIj4KICAgICAgICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0iY2hhbmdlLWRwIiA+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9InByb2ZpbGVfcGljIiA6c3JjPSJwcm9maWxlLnByb2ZpbGVfcGljdHVyZT9wcm9maWxlLnByb2ZpbGVfcGljdHVyZTonaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy91c2VyXzEucG5nJyIgc3R5bGU9IndpZHRoOiA4MHB4OyBoZWlnaHQ6IDgwcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgbWFyZ2luLXRvcDogMnB4OyI+CiAgICAgICAgICAgIDxoNiBjbGFzcz0idGV4dC1wcmltYXJ5Ij57e3Byb2ZpbGUubmFtZX19PC9oNj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPHRhYmxlIGNsYXNzPSIgdy0xMDAgYm9yZGVyLW5vbmUiPgogICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgPHRyPjx0aD5FbWFpbDwvdGg+PHRoPjo8L3RoPjx0ZCBjbGFzcz0idXNlcl9lbWFpbCI+e3twcm9maWxlLmVtYWlsfX08L3RkPjwvdHI+CiAgICAgICAgICAgICAgPHRyPjx0aD5QaG9uZTwvdGg+PHRoPjo8L3RoPjx0ZCBjbGFzcz0idXNlcl9waG9uZSI+e3twcm9maWxlLnBob25lfX08L3RkPjwvdHI+CiAgICAgICAgICAgICAgPHRyPjx0aD5DdXJyZW50IFBsYW48L3RoPjx0aD46PC90aD48dGQgY2xhc3M9InVzZXJfcGxhbiI+e3tjdXJyZW50X3BsYW4ucGxhbn19ICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtZGFuZ2VyIiB2LWlmPSJjdXJyZW50X3BsYW4uZXhwaXJlZCI+RXhwaXJlZDwvc3Bhbj48L3RkPjwvdHI+CiAgICAgICAgICAgICAgPHRyPjx0aD5Vc2VkIExlYWRzPC90aD48dGg+OjwvdGg+PHRkIGNsYXNzPSJ1c2VyX2xlYWRzIj57e3BhcnNlSW50KHVzZWRfbGVhZHMpfX0ve3tjdXJyZW50X3BsYW4ubGVhZHM9PS05OT8nVW5saW1pdGVkJzpjdXJyZW50X3BsYW4ubGVhZHN9fTwvdGQ+PC90cj4KICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBtdC00IHctMTAwIj4KICAgICAgICAgICAgPGEgIGNsYXNzPSJ0ZXh0LXByaW1hcnkgbS0wIiBAY2xpY2s9ImNybnRfdGFiX3Byb2ZpbGU9J3Byb2ZpbGUtZWRpdCciPkVkaXQgUHJvZmlsZTwvYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgCiAgICAgICAgPC9zZWN0aW9uPgogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJwcm9maWxlLXNlYyBweC00IiB2LWlmPSJjcm50X3RhYl9wcm9maWxlPT0ncHJvZmlsZS1lZGl0JyI+CiAgICAgICAgICA8Zm9ybSBpZD0icHJvZmlsZV9mb3JtIiBzdHlsZT0ibWFyZ2luOiAwOyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZS1kcCIgPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9InByb2ZpbGVfcGljIiA6c3JjPSJwcm9maWxlLnByb2ZpbGVfcGljdHVyZT9wcm9maWxlLnByb2ZpbGVfcGljdHVyZTonaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy91c2VyXzEucG5nJyIgc3R5bGU9IndpZHRoOiA4MHB4OyBoZWlnaHQ6IDgwcHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgbWFyZ2luLXRvcDogMnB4OyI+CiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LXByaW1hcnkiPkNoYW5nZSBQcm9maWxlIFBob3RvPC9oNj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZmlsZSIgbmFtZT0iaW1hZ2UiIEBjaGFuZ2U9InVwZGF0ZVByb2ZpbGVQaWMoKSI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9mb3JtPgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuLWlucHV0IGJ0bi1ibG9jayBteS00Ij4gIAogICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2xlYWRmaW5kZXIubGl2ZS9hc3NldHMvaW1nL3VzZXIucG5nIiBzdHlsZT0id2lkdGg6IDEzcHg7IiBjbGFzcz0ibWwtNCBtci0yIj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ibmFtZSIgdi1tb2RlbD0icHJvZmlsZS5uYW1lIj4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0bi1pbnB1dCBidG4tYmxvY2sgbXktNCI+ICAKICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy9tYWlsLnBuZyIgc3R5bGU9IndpZHRoOiAxM3B4OyIgY2xhc3M9Im1sLTQgbXItMiI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBuYW1lPSJlbWFpbCIgaWQ9ImVtYWlsIiB2LW1vZGVsPSJwcm9maWxlLmVtYWlsIiByZWFkb25seT0iIj4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0bi1pbnB1dCBidG4tYmxvY2sgbXktNCI+ICAKICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy9waG9uZS0yLnBuZyIgc3R5bGU9IndpZHRoOiAxM3B4OyIgY2xhc3M9Im1sLTQgbXItMiI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgbmFtZT0icGhvbmUiIHYtbW9kZWw9InByb2ZpbGUucGhvbmUiPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1pbmZvIGJ0bi1ibG9jayBteS00IHB5LTMgdGV4dC0xOCIgQGNsaWNrPSJ1cGRhdGVVc2VyKCkiPlNhdmU8L2J1dHRvbj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgdy0xMDAiPgogICAgICAgICAgICAgIDxhICBjbGFzcz0idGV4dC1wcmltYXJ5IG0tMCIgQGNsaWNrPSJjcm50X3RhYl9wcm9maWxlPSdjaGFuZ2UtcGFzc3dvcmQnIj5DaGFuZ2UgUGFzc3dvcmQ/PC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvc2VjdGlvbj4KICAgICAgICA8c2VjdGlvbiBjbGFzcz0icHJvZmlsZS1zZWMgcHgtNCIgdi1pZj0iY3JudF90YWJfcHJvZmlsZT09J2NoYW5nZS1wYXNzd29yZCciPgogICAgICAgICAgCiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJteC1hdXRvIG15LTIiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy9wYXNzd29yZC5qcGcpO2JhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47IHdpZHRoOiAyNDBweDtoZWlnaHQ6IDE0MHB4OyI+CiAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8aDMgY2xhc3M9ImZvbnQtd2VpZ2h0LWJvbGQgbXktNCI+RWRpdCBQYXNzd29yZDwvaDM+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0bi1pbnB1dCBidG4tYmxvY2sgbXktNCI+ICAKICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy9sb2NrLnBuZyIgc3R5bGU9IndpZHRoOiAxM3B4OyIgY2xhc3M9Im1sLTQgbXItMiI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgaWQ9InBhc3N3b3JkIiBwbGFjZWhvbGRlcj0iTmV3IFBhc3N3b3JkIj4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0bi1pbnB1dCBidG4tYmxvY2sgbXktNCI+ICAKICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9sZWFkZmluZGVyLmxpdmUvYXNzZXRzL2ltZy9sb2NrLnBuZyIgc3R5bGU9IndpZHRoOiAxM3B4OyIgY2xhc3M9Im1sLTQgbXItMiI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgaWQ9InBhc3N3b3JkIiBwbGFjZWhvbGRlcj0iQ29uZmlybSAgUGFzc3dvcmQiPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1pbmZvIGJ0bi1ibG9jayBteS00IHB5LTMgdGV4dC0xOCIgQGNsaWNrPSJ1cGRhdGVQYXNzd29yZCgpIj5TdWJtaXQ8L2J1dHRvbj4KICAgICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgIDwvZGl2PgogICAgPC9tYWluPgogIDwvYi1tb2RhbD4KICA8Yi1tb2RhbCBpZD0iYWNjb3VudCIgaGlkZS1oZWFkZXIgaGlkZS1mb290ZXI+CiAgICA8bWFpbiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICA8ZGl2IGNsYXNzPSJwcm9mbGllLXBhZ2UiIHN0eWxlPSJoZWlnaHQ6IDEwMCU7IiA+CiAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiBteS0xIiA+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDozMHB4OyI+CiAgICAgICAgICAKICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGgyIGNsYXNzPSJ0ZXh0LWNlbnRlciB0ZXh0LTIyIj5BY2NvdW50PC9oMj4KICAgICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOjMwcHg7Ij4KICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvY2xvc2UyLnBuZyIgd2lkdGg9IjE0IiBzdHlsZT0ib3BhY2l0eTouNzsiIEBjbGljaz0iJGJ2TW9kYWwuaGlkZSgnYWNjb3VudCcpIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJwcm9maWxlLXNlYyBweS00IiBzdHlsZT0ibWluLWhlaWdodDo1NXZoO21heC1oZWlnaHQ6ODB2aDtvdmVyZmxvdzphdXRvOyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIG1iLTMiIHN0eWxlPSJib3gtc2hhZG93Om5vbmU7IiB2LWItbW9kYWwucHJvZmlsZT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiI+CiAgICAgICAgICAgICAgPGg0PlByb2ZpbGU8L2g0PgogICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1hbmdsZS1yaWdodCI+PC9pPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBtYi0zIiBzdHlsZT0iYm94LXNoYWRvdzpub25lOyIgdi1iLW1vZGFsLmNhbmNlbC1hY2NvdW50PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LWFsaWduIj4KICAgICAgICAgICAgICA8aDQ+Q2FuY2VsIFBsYW48L2g0PgogICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1hbmdsZS1yaWdodCI+PC9pPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvc2VjdGlvbj4KICAgICAgICA8aHIgY2xhc3M9Im15LTIiPgogICAgICAgIDxkaXY+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLWRhcmsgYnRuLWJsb2NrIHRleHQtMTggcHktMiIgdi1iLW1vZGFsLmRlbGV0ZS1hY2NvdW50PkRlbGV0ZSBBY2NvdW50PC9idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgCiAgICAgIDwvZGl2PgogICAgPC9tYWluPgogIDwvYi1tb2RhbD4KICA8Yi1tb2RhbCBpZD0iZGVsZXRlLWFjY291bnQiIGNsYXNzPSJkZWxldGUtbW9kYWxzIiBoaWRlLWhlYWRlciBoaWRlLWZvb3Rlcj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJhciI+PC9kaXY+CiAgICA8bWFpbiBjbGFzcz0iIj4KICAgICAgPGRpdiBjbGFzcz0icHJvZmxpZS1wYWdlIG10LTQiIHN0eWxlPSJoZWlnaHQ6IDEwMCU7IiA+CiAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiB0ZXh0LTE3IiBzdHlsZT0ibGluZS1oZWlnaHQ6MjBweDsiPkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgeW91ciBhY2NvdW50PwogICAgICAgICAgPGRpdiBzdHlsZT0id2lkdGg6MzBweDsiPgogICAgICAgICAgICA8aW1nIHNyYz0iL2ltYWdlcy9jbG9zZTIucG5nIiB3aWR0aD0iMTQiIHN0eWxlPSJvcGFjaXR5Oi43OyIgQGNsaWNrPSIkYnZNb2RhbC5oaWRlKCdkZWxldGUtYWNjb3VudCcpIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxociBjbGFzcz0ibXktMiI+CiAgICAgICAgPHNlY3Rpb24gY2xhc3M9InByb2ZpbGUtc2VjIHB0LTMgcGItMCI+CiAgICAgICAgICA8cCBjbGFzcz0idGV4dC0xNCB0ZXh0LWxpZ2h0IiBzdHlsZT0ibGluZS1oZWlnaHQ6MjBweDsiPkFsbCB5b3VyIGRhdGEgd2lsbCBiZSBjb21wbGV0ZWx5IGRlbGV0ZWQgYW5kIHlvdSB3b24ndCBiZSBhYmxlIHRvIHJlY292ZXIgaXQuPC9wPgogICAgICAgIDwvc2VjdGlvbj4KICAgICAgICA8aHIgY2xhc3M9Im15LTMiPgogICAgICAgIDxkaXYgY2xhc3M9Im0tMCBnMiByb3cganVzdGlmeS1jb250ZW50LWNlbnRlciI+CiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtZGFyayBjb2wtNSAgdGV4dC0xOCBweS0yIiBAY2xpY2s9IiRidk1vZGFsLmhpZGUoJ2RlbGV0ZS1hY2NvdW50JykiPkNhbmNlbDwvYnV0dG9uPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1kYXJrICB0ZXh0LTE4IGNvbC01IHB5LTIiPkNvbmZpcm08L2J1dHRvbj4KCiAgICAgICAgPC9kaXY+CiAgICAgCiAgICAgIDwvZGl2PgogICAgPC9tYWluPgogIDwvYi1tb2RhbD4KICA8Yi1tb2RhbCBpZD0iY2FuY2VsLWFjY291bnQiIGNsYXNzPSJkZWxldGUtbW9kYWxzIiBoaWRlLWhlYWRlciBoaWRlLWZvb3Rlcj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJhciI+PC9kaXY+CiAgICA8bWFpbiBjbGFzcz0iIj4KICAgICAgPGRpdiBjbGFzcz0icHJvZmxpZS1wYWdlIG10LTQiIHN0eWxlPSJoZWlnaHQ6IDEwMCU7IiA+CiAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiB0ZXh0LTE3IiBzdHlsZT0ibGluZS1oZWlnaHQ6MjBweDsiPkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjYW5jZWwgeW91ciBwbGFuPwogICAgICAgICAgPGRpdiBzdHlsZT0id2lkdGg6MzBweDsiPgogICAgICAgICAgICA8aW1nIHNyYz0iL2ltYWdlcy9jbG9zZTIucG5nIiB3aWR0aD0iMTQiIHN0eWxlPSJvcGFjaXR5Oi43OyIgQGNsaWNrPSIkYnZNb2RhbC5oaWRlKCdjYW5jZWwtYWNjb3VudCcpIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxociBjbGFzcz0ibXktMiI+CiAgICAgICAgPHNlY3Rpb24gY2xhc3M9InByb2ZpbGUtc2VjIHB0LTMgcGItMCI+CiAgICAgICAgICA8cCBjbGFzcz0idGV4dC0xNCB0ZXh0LWxpZ2h0IiBzdHlsZT0ibGluZS1oZWlnaHQ6MjBweDsiPllvdSBjYW4gY2FuY2VsIHlvdXIgUHJlbWl1bSBwbGFuLjwvcD4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgPGhyIGNsYXNzPSJteS0zIj4KICAgICAgICA8ZGl2IGNsYXNzPSJtLTAgZzIgcm93IGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLWRhcmsgY29sLTUgIHRleHQtMTggcHktMiIgQGNsaWNrPSIkYnZNb2RhbC5oaWRlKCdjYW5jZWwtYWNjb3VudCcpIj5DYW5jZWw8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tZGFyayAgdGV4dC0xOCBjb2wtNSBweS0yIj5Db25maXJtPC9idXR0b24+CgogICAgICAgIDwvZGl2PgogICAgIAogICAgICA8L2Rpdj4KICAgIDwvbWFpbj4KICA8L2ItbW9kYWw+CgogIDxiLW1vZGFsIGlkPSJlbS1tb2RhbCIgaGlkZS1oZWFkZXIgaGlkZS1mb290ZXI+CiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciB3LTEwMCBkLWZsZXgganVzdGlmeS1jb250ZW50LWVuZCBweC0xIHBiLTMgcHQtMSBib3JkZXItMCIgPgogICAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvY2xvc2UucG5nIiB3aWR0aD0iMTQiIHN0eWxlPSJvcGFjaXR5Oi43OyIgQGNsaWNrPSIkYnZNb2RhbC5oaWRlKCdlbS1tb2RhbCcpIj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9InRyaWFsLW1vZGFsIj4KICAgICAgICA8bWFpbiBjbGFzcz0ibGVhZC1tYWluIHRleHQtY2VudGVyIj4KICAgICAgICAgIDxoMT5TdGFydCBmb3IgZnJlZSwgdGhlbiBlbmpveSA8c3BhbiBjbGFzcz0idGV4dC1wcmltYXJ5Ij4kMS9tb250aDwvc3Bhbj4gZm9yIDMgbW9udGhzPC9oMT4KICAgICAgICAgIDxoNT5UcnkgTGVhZGZpbmRlciBmcmVlIGZvciAzIGRheXMsIG5vIGNyZWRpdCBjYXJkIHJlcXVpcmVkPC9oNT4KICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biI+U3RhcnQgZnJlZSB0cmlhbDwvYnV0dG9uPgogICAgICAgICAgPHA+QnkgZW50ZXJpbmcgeW91ciBlbWFpbCwgeW91IGFncmVlIHRvIHJlY2lldmUgbWFya2V0aW5nIGVtYWlscyBmcm9tIGxlYWRmaW5kZXIuPC9wPgogICAgICAgIDwvbWFpbj4KICAgICAgPC9kaXY+CiAgPC9iLW1vZGFsPgogIDxiLW1vZGFsIGlkPSJlbS1tb2RhbDIiIHNpemU9InNtIiAgIGhpZGUtaGVhZGVyIGhpZGUtZm9vdGVyPgogICAgICA8ZGl2IGNsYXNzPSJiYWNrZHJvcC1jbG9zZSI+PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciB3LTEwMCBkLWZsZXgganVzdGlmeS1jb250ZW50LWVuZCAgcC00IHBiLTAgYm9yZGVyLTAiID4KICAgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2Nsb3NlLnBuZyIgd2lkdGg9IjE0IiBzdHlsZT0ib3BhY2l0eTouNzsiIEBjbGljaz0iJGJ2TW9kYWwuaGlkZSgnZW0tbW9kYWwyJykiPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0idHJpYWwtbW9kYWwiPgogICAgICAgIDxtYWluIGNsYXNzPSJsZWFkLW1haW4gdGV4dC1jZW50ZXIiPgogICAgICAgICAgPGgxPlN0YXJ0IGZvciBmcmVlLCB0aGVuIGVuam95IDxzcGFuIGNsYXNzPSJ0ZXh0LXByaW1hcnkiPiQxL21vbnRoPC9zcGFuPiBmb3IgMyBtb250aHM8L2gxPgogICAgICAgICAgPGg1PlRyeSBMZWFkZmluZGVyIGZyZWUgZm9yIDMgZGF5cywgbm8gY3JlZGl0IGNhcmQgcmVxdWlyZWQ8L2g1PgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIj5TdGFydCBmcmVlIHRyaWFsPC9idXR0b24+CiAgICAgICAgICA8cD5CeSBlbnRlcmluZyB5b3VyIGVtYWlsLCB5b3UgYWdyZWUgdG8gcmVjaWV2ZSBtYXJrZXRpbmcgZW1haWxzIGZyb20gbGVhZGZpbmRlci48L3A+CiAgICAgICAgPC9tYWluPgogICAgICA8L2Rpdj4KICA8L2ItbW9kYWw+CiAKICA8Yi1tb2RhbCBpZD0icGxhbnMiIGhpZGUtaGVhZGVyIGhpZGUtZm9vdGVyPgogICAgCiAgICA8ZGl2IGNsYXNzPSJwbGFuX2xvYWRpbmciIHYtaWY9IiRyb290LmxvY2tfYnRuIj4KICAgICAgPGRpdiBjbGFzcz0ibG9hZGluZ193cmFwMiIgaWQ9ImxvYWRpbmdfd3JhcDIiPgogICAgICAgIDxkaXYgaWQ9ImxvYWRpbmctYmFyLXNwaW5uZXIiIGNsYXNzPSJzcGlubmVyIj48ZGl2IGNsYXNzPSJzcGlubmVyLWljb24iPjwvZGl2PjwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iIiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MTVweDt0b3A6MTVweDt6LWluZGV4Ojk5OyI+CiAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2Nsb3NlMi5wbmciIHdpZHRoPSIxNCIgc3R5bGU9Im9wYWNpdHk6Ljc7IiBAY2xpY2s9IiRidk1vZGFsLmhpZGUoJ3BsYW5zJykiPgogICAgPC9kaXY+CiAgICAKICAgIDxtYWluIGNsYXNzPSJ0ZXh0LWNlbnRlciIgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsiPgogICAgICA8ZGl2IGNsYXNzPSJvdGhlcl9wYWdlcyBwbGFuIHBiLTEiIHN0eWxlPSJoZWlnaHQ6IDEwMCU7aGVpZ2h0OiA3NXZoO292ZXJmbG93OmF1dG87IiA+CiAgICAgICAgICAKICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0ibWVtYmVyc2hpcCBjb250YWluZXIgbXQtNCIgPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLTIgcm93ICBtLWF1dG8iIHYtZm9yPSIocGxhbixrZXkpIGluIHBsYW5zIiB2LWlmPSIoZnJlZV9wbGFuICYmIHBsYW4udHlwZT09J1RyaWFsJykgfHwgKCFmcmVlX3BsYW4gJiYgcGxhbi50eXBlIT0nVHJpYWwnKSI+CiAgICAgICAgICAgIDwhLS08aDIgY2xhc3M9IiBtYi0zIHRleHQtY2VudGVyIHctMTAwIj57e3BsYW4ucGxhbn19PC9oMj4tLT4KICAgICAgICAgICAgPGgyIGNsYXNzPSIgbWItMyB0ZXh0LWNlbnRlciB3LTEwMCI+UHJpY2luZzwvaDI+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBweC0wIiA+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtMl9fcHJpY2UgdGV4dC1jZW50ZXIgcC00IiBzdHlsZT0id2lkdGg6IDEwMCU7bWFyZ2luLWJvdHRvbTogMTBweDtiYWNrZ3JvdW5kOiAjZmZmO2NvbG9yOiAjMDAwO2JveC1zaGFkb3c6IDBweCAwcHggMHB4IDNweCAjMDAwO2JvcmRlcjogbm9uZTsiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LWFsaWduMiBnMiIgIHN0eWxlPSJib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDtmb250LXdlaWdodDogNDAwOyI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIiBzdHlsZT0ibWFyZ2luLXRvcDotMTBweDsiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0cmlrZXRocm91Z2giIHYtaWY9InBsYW4udHlwZSE9J1RyaWFsJyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSIiIHN0eWxlPSJmb250LXNpemU6IDMwcHg7Ij4kPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iIiBzdHlsZT0iZm9udC1zaXplOiAzMHB4OyI+OTk8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0icGxhbi50eXBlIT0nVHJpYWwnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtZGFuZ2VyIiBzdHlsZT0iZm9udC1zaXplOiAzMHB4OyI+JDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtZGFuZ2VyIiBzdHlsZT0iZm9udC1zaXplOiAzMHB4OyI+NDk8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0cmlrZXRocm91Z2giIHYtaWY9InBsYW4udHlwZT09J1RyaWFsJyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSIiIHN0eWxlPSJmb250LXNpemU6IDMwcHg7Ij4kPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iIiBzdHlsZT0iZm9udC1zaXplOiAzMHB4OyI+OTk8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IiIgdi1pZj0icGxhbi50eXBlPT0nVHJpYWwnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtZGFuZ2VyIiBzdHlsZT0iZm9udC1zaXplOiAzMHB4OyI+JDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtZGFuZ2VyIiBzdHlsZT0iZm9udC1zaXplOiAzMHB4OyI+MTwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibS0wIiBzdHlsZT0iZm9udC1zaXplOiAxMnB4OyI+LyB7e3BsYW4uaWQ9PTI/J1dlZWsnOidZZWFyJ319PC9zcGFuPiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImNhcmQtMl9fbGlzdCAgYWxpZ24tc2VsZi1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY2FyZC0yX19saXN0X19pdGVtIj48c3BhbiBjbGFzcz0icHItMiIgc3R5bGU9ImZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6MThweDsiPiB7e3BsYW4ubWF4aW11bV9sZWFkc319IDwvc3Bhbj5MZWFkcy97e3BsYW4uZHVyYXRpb259fXt7IHBsYW4ubGVhZF9kdXJhdGlvbiB9fXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY2FyZC0yX19saXN0X19pdGVtIj4xMDAgRW1haWwgY3JlZGl0czwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjYXJkLTJfX2xpc3RfX2l0ZW0iPlVubGltaXRlZCBMb2NhdGlvbnM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY2FyZC0yX19saXN0X19pdGVtIj5VbmxpbWl0ZWQgQnVzaW5lc3MgVGFyZ2V0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNhcmQtMl9fbGlzdF9faXRlbSI+Q1JNIFRvb2w8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY2FyZC0yX19saXN0X19pdGVtIj5FbWFpbCBtYXJrZXRpbmcgVG9vbDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjYXJkLTJfX2xpc3RfX2l0ZW0iPkRvbWFpbiBWZXJpZmljYXRpb248L2xpPgogICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbGFuLWJ0biIgc3R5bGU9IndpZHRoOiAxMDAlOyIgQGNsaWNrPSIiPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tYmxvY2sgY2hvb3NlX3BsYW4iIDppZD0iJ3BsYW5fYnRuJytwbGFuLmlkIiBAY2xpY2s9ImNob29zZVBsYW4ocGxhbi5pZCkiPgogICAgICAgICAgICAgICAgICB7e3BsYW4uaWQ9PWN1cnJlbnRfcGxhbi5pZD8nU3Vic2NyaWJlZCc6J0J1eSBOb3cnfX0KICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXRjaC1tYWluIG10LTQiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9InRvZ2dsZTIiPgogICAgICAgICAgICA8aW5wdXQgY2xhc3M9InRvZ2dsZTItY2hlY2tib3giIHR5cGU9ImNoZWNrYm94IiB2LW1vZGVsPSJmcmVlX3BsYW4iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2dnbGUyLXN3aXRjaCI+PC9kaXY+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0b2dnbGUyLWxhYmVsIj5JIHdhbnQgNyBEYXlzIFRyaWFsPC9zcGFuPgogICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvbWFpbj4KICAgICAgCiAgPC9iLW1vZGFsPgogIAo8L2Rpdj4K"},null]}