{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addstock.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\src\\views\\app\\pages\\Addstock.vue","mtime":1691734927574},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\css-loader\\dist\\cjs.js","mtime":1690630782794},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1690631371246},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\postcss-loader\\src\\index.js","mtime":1690631539045},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1690631271247},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690631124815},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\NewVuePrjct\\latest\\node_modules\\vue-loader\\lib\\index.js","mtime":1690631371088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm1vZGFsIHsNCiAgZGlzcGxheTogbm9uZTsNCiAgcG9zaXRpb246IGZpeGVkOw0KICB6LWluZGV4OiAxOw0KICBsZWZ0OiAwOw0KICB0b3A6IDA7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIG92ZXJmbG93OiBhdXRvOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7DQp9DQoNCi5tb2RhbC1jb250ZW50IHsNCiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogIG1hcmdpbjogMTUlIGF1dG87DQogIHBhZGRpbmc6IDIwcHg7DQogIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7DQogIHdpZHRoOiA4MCU7DQp9DQoNCi5jbG9zZSB7DQogIGNvbG9yOiAjYWFhOw0KICBmbG9hdDogcmlnaHQ7DQogIGZvbnQtc2l6ZTogMjhweDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQp9DQoNCi5jbG9zZTpob3ZlciwNCi5jbG9zZTpmb2N1cyB7DQogIGNvbG9yOiBibGFjazsNCiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQo="},{"version":3,"sources":["Addstock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Addstock.vue","sourceRoot":"src/views/app/pages","sourcesContent":["<template>\r\n  <div>\r\n    <h2>Farmer Plants</h2>\r\n    <label for=\"selectedFarmer\">Select Farmer:</label>\r\n    <select\r\n      id=\"selectedFarmer\"\r\n      v-model=\"selectedFarmer\"\r\n      @change=\"fetchFarmerPlants\"\r\n    >\r\n      <option v-for=\"farmer in farmers\" :key=\"farmer.id\" :value=\"farmer.id\">{{\r\n        farmer.name\r\n      }}</option>\r\n    </select>\r\n    <button @click=\"openAddPlantModal\">Add New Plant</button>\r\n\r\n    <h2>Plants for Selected Farmer</h2>\r\n    <ul class=\"plant-list\">\r\n      <li v-for=\"plant in farmerPlants\" :key=\"plant.id\" class=\"plant-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          v-model=\"selectedPlants\"\r\n          :value=\"plant.id\"\r\n          @change=\"openQuantityModal(plant)\"\r\n        />\r\n        {{ plant.name }} - Quantity: {{ plant.quantity }}\r\n      </li>\r\n    </ul>\r\n\r\n    <b-modal\r\n      id=\"addPlantModal\"\r\n      title=\"Add New Plant\"\r\n      @hidden=\"closeAddPlantModal\"\r\n    >\r\n      <h4>Select Existing Plant:</h4>\r\n      <select v-model=\"selectedExistingPlant\">\r\n        <option\r\n          v-for=\"plant in existingPlants\"\r\n          :key=\"plant.id\"\r\n          :value=\"plant.id\"\r\n        >\r\n          {{ plant.name }}\r\n        </option>\r\n      </select>\r\n      <button @click=\"addExistingPlant\">Add Plant</button>\r\n    </b-modal>\r\n\r\n    <b-modal\r\n      id=\"quantityModal\"\r\n      title=\"Edit Plant Products\"\r\n      @hidden=\"closeQuantityModal\"\r\n    >\r\n      <p>{{ selectedPlant.name }}</p>\r\n      <h4>Edit Products:</h4>\r\n      <ul>\r\n        <li v-for=\"product in selectedPlant.products\" :key=\"product.id\">\r\n          {{ product.name }} - Price: {{ product.price }}\r\n          <input type=\"number\" v-model=\"product.quantity\" />\r\n        </li>\r\n      </ul>\r\n      <button @click=\"saveProductsQuantity\">Save</button>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      farmers: [],\r\n      selectedFarmer: null,\r\n      farmerPlants: [],\r\n      showAddPlantModal: false,\r\n      showQuantityModal: false,\r\n      newPlantName: \"\",\r\n      selectedPlants: [],\r\n      selectedPlant: {\r\n        id: null,\r\n        name: \"\",\r\n        products: [],\r\n      },\r\n      existingPlants: [],\r\n      selectedExistingPlant: null,\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchFarmers();\r\n    await this.fetchExistingPlants();\r\n  },\r\n  methods: {\r\n    async fetchExistingPlants() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://127.0.0.1:8000/api/cropsplant/\"\r\n        );\r\n        this.existingPlants = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching existing plants:\", error);\r\n      }\r\n    },\r\n\r\n    async fetchFarmers() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/farmers/\");\r\n        this.farmers = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching farmers:\", error);\r\n      }  \r\n    },\r\n    async fetchFarmerPlants() {\r\n      try {\r\n        if (this.selectedFarmer) {\r\n          const response = await axios.get(\r\n            `http://127.0.0.1:8000/api/cropsplant/?farmer=${this.selectedFarmer}`\r\n          );\r\n          this.farmerPlants = response.data;\r\n\r\n          for (const plant of this.farmerPlants) {\r\n            const productsResponse = await axios.get(\r\n              `http://127.0.0.1:8000/api/cropsproduct/?plant=${plant.id}`\r\n            );\r\n            const products = productsResponse.data;\r\n            plant.products = products.map((product) => ({\r\n              ...product,\r\n              quantity: 0,\r\n            }));\r\n          }\r\n\r\n          console.log(\"Fetched farmer plants:\", this.farmerPlants);\r\n        } else {\r\n          this.farmerPlants = [];\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching farmer plants:\", error);\r\n      }\r\n    },\r\n\r\n    async fetchPlantProducts(plantId) {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:8000/api/cropsproduct/?plant=${plantId}`\r\n        );\r\n        this.selectedPlant.products = response.data.map((product) => ({\r\n          ...product,\r\n          quantity: 0,\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching plant products:\", error);\r\n      }\r\n    },\r\n\r\n    openAddPlantModal() {\r\n      this.$bvModal.show(\"addPlantModal\");\r\n    },\r\n    closeAddPlantModal() {\r\n      this.$bvModal.hide(\"addPlantModal\");\r\n      this.newPlantName = \"\";\r\n    },\r\n    async addPlant() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://127.0.0.1:8000/api/cropscategory/\"\r\n        );\r\n        const categories = response.data;\r\n        console.log(\"Categories:\", categories);\r\n      } catch (error) {\r\n        console.error(\"Error adding plant:\", error);\r\n      }\r\n    },\r\n\r\n    openQuantityModal(plant) {\r\n      this.$bvModal.show(\"quantityModal\");\r\n      this.selectedPlant.id = plant.id;\r\n      this.selectedPlant.name = plant.name;\r\n      this.fetchPlantProducts(plant.id);\r\n    },\r\n\r\n    closeQuantityModal() {\r\n      this.$bvModal.hide(\"quantityModal\");\r\n      this.selectedPlant.id = null;\r\n      this.selectedPlant.name = \"\";\r\n      this.selectedPlant.quantity = null;\r\n    },\r\n    async saveProductsQuantity() {\r\n      try {\r\n        const requestData = this.selectedPlant.products.map((product) => ({\r\n          quantity: product.quantity,\r\n          crops_in_farmer: this.selectedFarmer,\r\n          product: product.id,\r\n        }));\r\n\r\n        await Promise.all(\r\n          requestData.map((data) =>\r\n            axios.post(`http://127.0.0.1:8000/api/cropsproduct_stock/`, data)\r\n          )\r\n        );\r\n\r\n        this.closeQuantityModal();\r\n        this.fetchFarmerPlants();\r\n      } catch (error) {\r\n        console.error(\"Error updating quantities:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}